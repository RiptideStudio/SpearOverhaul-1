using Microsoft.Xna.Framework;
using SpearOverhaul.GlobalStuff;
using Terraria;
using Terraria.Audio;
using Terraria.GameContent;
using Terraria.ID;
using Terraria.ModLoader;

namespace SpearOverhaul.SpearProjectiles;

public class ThrownSpear : ModProjectile
{
	private int time;

	public override void SetStaticDefaults()
	{
		base.DisplayName.SetDefault("Spear");
	}

	public override void SetDefaults()
	{
		base.Projectile.aiStyle = 1;
		base.Projectile.timeLeft = 1200;
		base.Projectile.friendly = true;
		base.Projectile.hostile = false;
		base.Projectile.width = 12;
		base.Projectile.DamageType = DamageClass.Melee;
		base.Projectile.height = 12;
		base.Projectile.penetrate = 1;
		base.Projectile.ignoreWater = false;
		base.Projectile.tileCollide = true;
		base.Projectile.scale = 1.25f;
		base.Projectile.light = 0f;
		base.Projectile.extraUpdates = 1;
		base.DrawOffsetX = -16;
		base.DrawOriginOffsetY = -16;
	}

	public override void OnHitNPC(NPC target, int damage, float knockback, bool crit)
	{
		Player player = Main.player[Main.myPlayer];
		if (player.GetModPlayer<GlobalPlayer>().tribalArmor)
		{
			int proj = Projectile.NewProjectile(target.GetSource_Death(), target.Center, new Vector2(0f, 0f), 0, 228, base.Projectile.damage / 3, 0, player.whoAmI);
			Main.projectile[proj].scale = 0.75f;
			Main.projectile[proj].alpha = 125;
			Main.projectile[proj].timeLeft = 180;
			Main.projectile[proj].penetrate = 1;
		}
		target.HasBuff(base.Mod.Find<ModBuff>("BloodDebuff").Type);
		if (target.HasBuff(base.Mod.Find<ModBuff>("BloodDebuff2").Type))
		{
			target.AddBuff(base.Mod.Find<ModBuff>("BloodDebuff3").Type, 180);
			target.AddBuff(base.Mod.Find<ModBuff>("BloodDebuff").Type, 240);
		}
		else if (target.HasBuff(base.Mod.Find<ModBuff>("BloodDebuff").Type))
		{
			target.AddBuff(base.Mod.Find<ModBuff>("BloodDebuff2").Type, 180);
			target.AddBuff(base.Mod.Find<ModBuff>("BloodDebuff").Type, 240);
		}
		target.AddBuff(base.Mod.Find<ModBuff>("BloodDebuff").Type, 240);
		if (TextureAssets.Projectile[base.Projectile.type].get_Value() == TextureAssets.Item[base.Mod.Find<ModItem>("FrozenSpear").Type].get_Value() && Main.rand.Next(0, 3) == 1)
		{
			target.AddBuff(44, 120);
		}
		if (TextureAssets.Projectile[base.Projectile.type].get_Value() == TextureAssets.Item[base.Mod.Find<ModItem>("MoltenJabber").Type].get_Value() && Main.rand.Next(0, 3) == 1)
		{
			target.AddBuff(24, 120);
		}
		if (TextureAssets.Projectile[base.Projectile.type].get_Value() == TextureAssets.Item[base.Mod.Find<ModItem>("BramblePartisan").Type].get_Value() && Main.rand.Next(0, 3) == 1)
		{
			target.AddBuff(20, 120);
		}
	}

	public override void AI()
	{
		Player player = Main.LocalPlayer;
		if (player.GetModPlayer<GlobalPlayer>().tribalArmor && this.time % 5 == 0 && this.time > 5)
		{
			int proj = Projectile.NewProjectile(base.Projectile.GetSource_Death(), base.Projectile.Center.X - base.Projectile.velocity.X * 4f, base.Projectile.Center.Y - base.Projectile.velocity.Y * 4f, 0f, 0f, 228, base.Projectile.damage / 3, 0f, player.whoAmI);
			Main.projectile[proj].scale = 0.75f;
			Main.projectile[proj].alpha = 125;
			Main.projectile[proj].timeLeft = 180;
		}
		base.Projectile.rotation = base.Projectile.velocity.ToRotation() + MathHelper.ToRadians(45f);
		if (base.Projectile.spriteDirection == -1)
		{
			base.Projectile.rotation -= MathHelper.ToRadians(90f);
		}
		if (base.Projectile.timeLeft < 1150)
		{
			base.Projectile.velocity.X *= 0.97f;
			base.Projectile.aiStyle = 1;
			base.Projectile.velocity.Y += 0.17f;
		}
		else
		{
			base.Projectile.aiStyle = 0;
		}
		if (TextureAssets.Projectile[base.Projectile.type].get_Value() == TextureAssets.Item[base.Mod.Find<ModItem>("FrozenSpear").Type].get_Value())
		{
			Dust dust = Dust.NewDustDirect(base.Projectile.position, base.Projectile.height, base.Projectile.width, 135, base.Projectile.velocity.X * 0.2f, base.Projectile.velocity.Y * 0.2f, 200, default(Color), 1.2f);
			dust.velocity = base.Projectile.velocity / 2f;
			dust.noGravity = true;
		}
		if (TextureAssets.Projectile[base.Projectile.type].get_Value() == TextureAssets.Item[base.Mod.Find<ModItem>("MoltenJabber").Type].get_Value())
		{
			Dust dust2 = Dust.NewDustDirect(base.Projectile.position, base.Projectile.height, base.Projectile.width, 6, base.Projectile.velocity.X * 0.2f, base.Projectile.velocity.Y * 0.2f, 200, default(Color), 1.2f);
			dust2.velocity = base.Projectile.velocity / 2f;
			dust2.noGravity = true;
		}
		if (TextureAssets.Projectile[base.Projectile.type].get_Value() == TextureAssets.Item[base.Mod.Find<ModItem>("MarbleSpear").Type].get_Value())
		{
			Dust dust3 = Dust.NewDustDirect(base.Projectile.position, base.Projectile.height, base.Projectile.width, 63, base.Projectile.velocity.X * 0.2f, base.Projectile.velocity.Y * 0.2f, 200, default(Color), 1.2f);
			dust3.velocity = base.Projectile.velocity / 2f;
			dust3.noGravity = true;
			Dust dust4 = Dust.NewDustDirect(base.Projectile.position, base.Projectile.height, base.Projectile.width, 204, base.Projectile.velocity.X * 0.2f, base.Projectile.velocity.Y * 0.2f, 200, default(Color), 1.2f);
			dust4.velocity += base.Projectile.velocity * 0.3f;
			dust4.velocity *= 0.2f;
		}
	}

	public override void Kill(int timeLeft)
	{
		//IL_00f2: Unknown result type (might be due to invalid IL or missing references)
		Player player = Main.player[Main.myPlayer];
		if (player.GetModPlayer<GlobalPlayer>().tribalArmor)
		{
			int proj = Projectile.NewProjectile(base.Projectile.GetSource_Death(), base.Projectile.Center.X + base.Projectile.velocity.X * 4f, base.Projectile.Center.Y + base.Projectile.velocity.Y * 4f, 0f, 0f, 228, base.Projectile.damage / 3, 0f, player.whoAmI);
			Main.projectile[proj].scale = 0.75f;
			Main.projectile[proj].alpha = 125;
			Main.projectile[proj].timeLeft = 180;
		}
		SoundEngine.PlaySound(in SoundID.Dig, base.Projectile.position);
		for (int i = 0; i < 8; i++)
		{
			int num370 = Dust.NewDust(new Vector2(base.Projectile.position.X, base.Projectile.position.Y), base.Projectile.width, base.Projectile.height, 0, 0f, 0f, 7, default(Color), 1.5f);
			Main.dust[num370].velocity *= 1.4f;
			Main.dust[num370].noGravity = true;
		}
	}
}
